services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://backend:8000
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - SENTRY_DSN=${SENTRY_DSN}  # Optional, if using Sentry
    depends_on:
      - db
      - redis
    volumes:
      - .:/app  # For development; remove in production
    entrypoint: /entrypoint.sh  # Assumes entrypoint.sh handles migrations

  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}  # Optional
    command: celery -A workers.celery_app worker --loglevel=info
    depends_on:
      - db
      - redis
      - backend
    volumes:
      - .:/app  # For development

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

volumes:
  postgres_data: